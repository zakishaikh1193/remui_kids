{{> theme_remui_kids/admin_shared_styles }}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Training Events</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            padding: 20px;
        }

        .training-events-container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            animation: fadeIn 0.8s ease-out;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .header {
            background: linear-gradient(135deg,rgb(210, 210, 216),rgb(188, 213, 228));
            color: white;
            padding: 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
            
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(180deg); }
        }

        .header h1 {
            font-size: 2.5rem;
            margin-bottom: 10px;
            position: relative;
            z-index: 1;
          
        }

        @keyframes titleGlow {
            from { text-shadow: 0 0 20px rgba(255,255,255,0.5); }
            to { text-shadow: 0 0 30px rgba(255,255,255,0.8), 0 0 40px rgba(255,255,255,0.3); }
        }

        .header p {
            font-size: 1.1rem;
            opacity: 0.9;
            position: relative;
            z-index: 1;
        }

        .content {
            padding: 40px;
        }

        .stats-section {
            background: linear-gradient(135deg, #f8f9ff, #e8f0ff);
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            border: 2px solid #e3f2fd;
            animation: slideInDown 0.8s ease-out 0.2s both;
        }

        @keyframes slideInDown {
            from { opacity: 0; transform: translateY(-30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .stats-section h2 {
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
        }

        .stat-card {
            background: white;
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border: 2px solid #f0f0f0;
            transition: all 0.3s ease;
        }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
        }

        .stat-icon {
            font-size: 2.5rem;
            margin-bottom: 10px;
        }

        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: #333;
            margin-bottom: 5px;
        }

        .stat-label {
            color: #666;
            font-size: 0.9rem;
        }

        .controls-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 2px solid #f0f0f0;
            animation: slideInLeft 0.8s ease-out 0.4s both;
        }

        @keyframes slideInLeft {
            from { opacity: 0; transform: translateX(-30px); }
            to { opacity: 1; transform: translateX(0); }
        }

        .controls-section h2 {
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .controls-row {
            display: flex;
            gap: 20px;
            align-items: center;
            flex-wrap: wrap;
        }

        .search-input {
            flex: 1;
            min-width: 300px;
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .search-input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .status-filter {
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1rem;
            background: white;
            cursor: pointer;
        }

        .btn {
            padding: 12px 25px;
            border: none;
            border-radius: 8px;
            font-size: 1rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(40, 167, 69, 0.3);
        }

        .btn-secondary {
            background: linear-gradient(135deg, #6c757d, #495057);
            color: white;
        }

        .btn-secondary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(108, 117, 125, 0.3);
        }

        .events-section {
            background: white;
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 2px solid #f0f0f0;
            animation: slideInRight 0.8s ease-out 0.6s both;
        }

        @keyframes slideInRight {
            from { opacity: 0; transform: translateX(30px); }
            to { opacity: 1; transform: translateX(0); }
        }

        .events-section h2 {
            color: #333;
            margin-bottom: 20px;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .events-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 20px;
        }

        .event-card {
            background: white;
            border-radius: 15px;
            padding: 25px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
            border: 2px solid #f0f0f0;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .event-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.15);
        }

        .event-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(135deg, #667eea, #764ba2);
        }

        .event-status {
            position: absolute;
            top: 15px;
            right: 15px;
            padding: 5px 12px;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 600;
            text-transform: uppercase;
        }

        .event-status.pending {
            background: #fff3cd;
            color: #856404;
        }

        .event-status.approved {
            background: #d4edda;
            color: #155724;
        }

        .event-status.rejected {
            background: #f8d7da;
            color: #721c24;
        }

        .event-title {
            font-size: 1.3rem;
            font-weight: 600;
            color: #333;
            margin-bottom: 10px;
            margin-top: 10px;
        }

        .event-description {
            color: #666;
            margin-bottom: 15px;
            line-height: 1.5;
        }

        .event-details {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-bottom: 20px;
        }

        .event-detail {
            display: flex;
            align-items: center;
            gap: 8px;
            color: #666;
            font-size: 0.9rem;
        }

        .event-detail i {
            color: #667eea;
            width: 16px;
        }

        .event-actions {
            display: flex;
            gap: 10px;
            flex-wrap: wrap;
        }

        .btn-sm {
            padding: 8px 15px;
            font-size: 0.9rem;
        }

        .btn-approve {
            background: linear-gradient(135deg, #28a745, #20c997);
            color: white;
        }

        .btn-reject {
            background: linear-gradient(135deg, #dc3545, #c82333);
            color: white;
        }

        .btn-view {
            background: linear-gradient(135deg, #007bff, #0056b3);
            color: white;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            animation: fadeIn 0.3s ease-out;
        }

        .modal.show {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .modal-content {
            background: white;
            border-radius: 15px;
            padding: 30px;
            max-width: 600px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
            animation: slideInUp 0.3s ease-out;
        }

        @keyframes slideInUp {
            from { opacity: 0; transform: translateY(30px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 2px solid #f0f0f0;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #333;
        }

        .close-btn {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #666;
            padding: 5px;
        }

        .close-btn:hover {
            color: #333;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #333;
        }

        .form-input, .form-textarea, .form-select {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-size: 1rem;
            transition: all 0.3s ease;
        }

        .form-input:focus, .form-textarea:focus, .form-select:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .form-textarea {
            resize: vertical;
            min-height: 100px;
        }

        .checkbox-group {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .checkbox {
            width: 18px;
            height: 18px;
            cursor: pointer;
        }

        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }

        .loading.show {
            display: block;
        }

        .spinner {
            border: 3px solid #f3f3f3;
            border-top: 3px solid #667eea;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
            margin: 0 auto 10px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        .message {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 15px 20px;
            border-radius: 10px;
            color: white;
            font-weight: 600;
            z-index: 1000;
            animation: slideInRight 0.3s ease-out;
        }

        .message.success {
            background: linear-gradient(135deg, #28a745, #20c997);
        }

        .message.error {
            background: linear-gradient(135deg, #dc3545, #c82333);
        }

        @keyframes slideInRight {
            from { transform: translateX(100%); }
            to { transform: translateX(0); }
        }

        @media (max-width: 768px) {
            .content {
                padding: 20px;
            }
            
            .header h1 {
                font-size: 2rem;
            }
            
            .controls-row {
                flex-direction: column;
                align-items: stretch;
            }
            
            .search-input {
                min-width: auto;
            }
            
            .events-grid {
                grid-template-columns: 1fr;
            }
            
            .stats-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="training-events-container">
        <div class="header">
            <h1><i class="fas fa-calendar-alt"></i> Training Events</h1>
            <p>Manage training events and approval workflow</p>
        </div>

        <div class="content">
            <div class="stats-section">
                <h2><i class="fas fa-chart-bar"></i> Event Statistics</h2>
                <div class="stats-grid" id="statsGrid">
                    <div class="stat-card">
                        <div class="stat-icon" style="color: #667eea;">
                            <i class="fas fa-calendar"></i>
                        </div>
                        <div class="stat-number" id="totalEvents">-</div>
                        <div class="stat-label">Total Events</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon" style="color: #ffc107;">
                            <i class="fas fa-clock"></i>
                        </div>
                        <div class="stat-number" id="pendingEvents">-</div>
                        <div class="stat-label">Pending Approval</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon" style="color: #28a745;">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="stat-number" id="approvedEvents">-</div>
                        <div class="stat-label">Approved Events</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon" style="color: #dc3545;">
                            <i class="fas fa-times-circle"></i>
                        </div>
                        <div class="stat-number" id="rejectedEvents">-</div>
                        <div class="stat-label">Rejected Events</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-icon" style="color: #17a2b8;">
                            <i class="fas fa-users"></i>
                        </div>
                        <div class="stat-number" id="totalRegistrations">-</div>
                        <div class="stat-label">Total Registrations</div>
                    </div>
                </div>
            </div>

            <div class="controls-section">
                <h2><i class="fas fa-filter"></i> Filter & Search</h2>
                <div class="controls-row">
                    <input type="text" id="searchInput" class="search-input" placeholder="Search events by title, description, or creator...">
                    <select id="statusFilter" class="status-filter">
                        <option value="all">All Status</option>
                        <option value="pending">Pending</option>
                        <option value="approved">Approved</option>
                        <option value="rejected">Rejected</option>
                    </select>
                    <button id="createEventBtn" class="btn btn-primary">
                        <i class="fas fa-plus"></i> Create Event
                    </button>
                    <a href="{{config.wwwroot}}/theme/remui_kids/admin/users_management_dashboard.php" class="btn btn-secondary">
                        <i class="fas fa-arrow-left"></i> Back to Dashboard
                    </a>
                </div>
            </div>

            <div class="events-section">
                <h2><i class="fas fa-list"></i> Training Events</h2>
                <div class="events-grid" id="eventsGrid">
                    <div class="loading">
                        <div class="spinner"></div>
                        <p>Loading events...</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Event Modal -->
    <div id="createEventModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Create Training Event</h3>
                <button class="close-btn" onclick="closeModal('createEventModal')">&times;</button>
            </div>
            <form id="createEventForm">
                <div class="form-group">
                    <label class="form-label">Event Title *</label>
                    <input type="text" id="eventTitle" class="form-input" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Description *</label>
                    <textarea id="eventDescription" class="form-textarea" required></textarea>
                </div>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                    <div class="form-group">
                        <label class="form-label">Start Date *</label>
                        <input type="datetime-local" id="eventStartDate" class="form-input" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">End Date *</label>
                        <input type="datetime-local" id="eventEndDate" class="form-input" required>
                    </div>
                </div>
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px;">
                    <div class="form-group">
                        <label class="form-label">Max Participants *</label>
                        <input type="number" id="eventMaxParticipants" class="form-input" required min="1">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Location</label>
                        <input type="text" id="eventLocation" class="form-input">
                    </div>
                </div>
                <div class="form-group">
                    <label class="form-label">Instructor</label>
                    <input type="text" id="eventInstructor" class="form-input">
                </div>
                <div class="form-group">
                    <div class="checkbox-group">
                        <input type="checkbox" id="eventApprovalRequired" class="checkbox">
                        <label for="eventApprovalRequired">Require approval for registrations</label>
                    </div>
                </div>
                <div style="display: flex; gap: 15px; justify-content: flex-end; margin-top: 30px;">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('createEventModal')">Cancel</button>
                    <button type="submit" class="btn btn-primary">Create Event</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Event Details Modal -->
    <div id="eventDetailsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Event Details</h3>
                <button class="close-btn" onclick="closeModal('eventDetailsModal')">&times;</button>
            </div>
            <div id="eventDetailsContent">
                <!-- Content will be populated by JavaScript -->
            </div>
        </div>
    </div>

    <!-- Approval Modal -->
    <div id="approvalModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Event Approval</h3>
                <button class="close-btn" onclick="closeModal('approvalModal')">&times;</button>
            </div>
            <form id="approvalForm">
                <input type="hidden" id="approvalEventId">
                <div class="form-group">
                    <label class="form-label">Action</label>
                    <select id="approvalAction" class="form-select" required>
                        <option value="">Select Action</option>
                        <option value="approved">Approve</option>
                        <option value="rejected">Reject</option>
                    </select>
                </div>
                <div class="form-group">
                    <label class="form-label">Comments</label>
                    <textarea id="approvalComments" class="form-textarea" placeholder="Add comments for this decision..."></textarea>
                </div>
                <div style="display: flex; gap: 15px; justify-content: flex-end; margin-top: 30px;">
                    <button type="button" class="btn btn-secondary" onclick="closeModal('approvalModal')">Cancel</button>
                    <button type="submit" class="btn btn-primary">Submit Decision</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        let currentEvents = [];

        document.addEventListener('DOMContentLoaded', function() {
            loadEventStats();
            loadEvents();
            initializeEventListeners();
        });

        function initializeEventListeners() {
            document.getElementById('searchInput').addEventListener('input', debounce(loadEvents, 300));
            document.getElementById('statusFilter').addEventListener('change', loadEvents);
            document.getElementById('createEventBtn').addEventListener('click', () => openModal('createEventModal'));
            document.getElementById('createEventForm').addEventListener('submit', createEvent);
            document.getElementById('approvalForm').addEventListener('submit', submitApproval);
        }

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        function loadEventStats() {
            fetch('{{config.wwwroot}}/theme/remui_kids/admin/training_events.php?action=get_event_stats')
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        document.getElementById('totalEvents').textContent = data.stats.total_events;
                        document.getElementById('pendingEvents').textContent = data.stats.pending_events;
                        document.getElementById('approvedEvents').textContent = data.stats.approved_events;
                        document.getElementById('rejectedEvents').textContent = data.stats.rejected_events;
                        document.getElementById('totalRegistrations').textContent = data.stats.total_registrations;
                    }
                })
                .catch(error => {
                    console.error('Error loading stats:', error);
                });
        }

        function loadEvents() {
            const search = document.getElementById('searchInput').value;
            const status = document.getElementById('statusFilter').value;
            const eventsGrid = document.getElementById('eventsGrid');
            
            eventsGrid.innerHTML = '<div class="loading show"><div class="spinner"></div><p>Loading events...</p></div>';

            const params = new URLSearchParams();
            if (search) params.append('search', search);
            if (status !== 'all') params.append('status', status);

            fetch(`{{config.wwwroot}}/theme/remui_kids/admin/training_events.php?action=get_events&${params}`)
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        currentEvents = data.events;
                        renderEvents(data.events);
                    } else {
                        showMessage('Error loading events: ' + data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showMessage('Error loading events', 'error');
                });
        }

        function renderEvents(events) {
            const eventsGrid = document.getElementById('eventsGrid');
            
            if (events.length === 0) {
                eventsGrid.innerHTML = '<p style="text-align: center; color: #666; padding: 40px;">No events found</p>';
                return;
            }

            eventsGrid.innerHTML = events.map(event => `
                <div class="event-card">
                    <div class="event-status ${event.status}">${event.status}</div>
                    <div class="event-title">${event.title}</div>
                    <div class="event-description">${event.description}</div>
                    <div class="event-details">
                        <div class="event-detail">
                            <i class="fas fa-calendar"></i>
                            <span>${new Date(event.start_date * 1000).toLocaleDateString()}</span>
                        </div>
                        <div class="event-detail">
                            <i class="fas fa-clock"></i>
                            <span>${new Date(event.start_date * 1000).toLocaleTimeString()}</span>
                        </div>
                        <div class="event-detail">
                            <i class="fas fa-users"></i>
                            <span>${event.registrations_count || 0}/${event.max_participants} participants</span>
                        </div>
                        <div class="event-detail">
                            <i class="fas fa-map-marker-alt"></i>
                            <span>${event.location || 'TBD'}</span>
                        </div>
                    </div>
                    <div class="event-actions">
                        <button class="btn btn-view btn-sm" onclick="viewEventDetails(${event.id})">
                            <i class="fas fa-eye"></i> View Details
                        </button>
                        ${event.status === 'pending' ? `
                            <button class="btn btn-approve btn-sm" onclick="openApprovalModal(${event.id}, 'approved')">
                                <i class="fas fa-check"></i> Approve
                            </button>
                            <button class="btn btn-reject btn-sm" onclick="openApprovalModal(${event.id}, 'rejected')">
                                <i class="fas fa-times"></i> Reject
                            </button>
                        ` : ''}
                    </div>
                </div>
            `).join('');
        }

        function createEvent(e) {
            e.preventDefault();
            
            const formData = {
                title: document.getElementById('eventTitle').value,
                description: document.getElementById('eventDescription').value,
                start_date: document.getElementById('eventStartDate').value,
                end_date: document.getElementById('eventEndDate').value,
                max_participants: document.getElementById('eventMaxParticipants').value,
                location: document.getElementById('eventLocation').value,
                instructor: document.getElementById('eventInstructor').value,
                approval_required: document.getElementById('eventApprovalRequired').checked
            };

            fetch('{{config.wwwroot}}/theme/remui_kids/admin/training_events.php?action=create_event', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(formData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    showMessage('Event created successfully', 'success');
                    closeModal('createEventModal');
                    document.getElementById('createEventForm').reset();
                    loadEvents();
                    loadEventStats();
                } else {
                    showMessage('Error creating event: ' + data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Error creating event', 'error');
            });
        }

        function viewEventDetails(eventId) {
            fetch(`{{config.wwwroot}}/theme/remui_kids/admin/training_events.php?action=get_event_details&event_id=${eventId}`)
                .then(response => response.json())
                .then(data => {
                    if (data.status === 'success') {
                        displayEventDetails(data.event, data.registrations);
                        openModal('eventDetailsModal');
                    } else {
                        showMessage('Error loading event details: ' + data.message, 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showMessage('Error loading event details', 'error');
                });
        }

        function displayEventDetails(event, registrations) {
            const content = document.getElementById('eventDetailsContent');
            content.innerHTML = `
                <div style="margin-bottom: 20px;">
                    <h4 style="color: #333; margin-bottom: 10px;">${event.title}</h4>
                    <p style="color: #666; line-height: 1.6;">${event.description}</p>
                </div>
                
                <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 20px; margin-bottom: 20px;">
                    <div>
                        <strong>Start Date:</strong> ${new Date(event.start_date * 1000).toLocaleString()}<br>
                        <strong>End Date:</strong> ${new Date(event.end_date * 1000).toLocaleString()}<br>
                        <strong>Max Participants:</strong> ${event.max_participants}
                    </div>
                    <div>
                        <strong>Location:</strong> ${event.location || 'TBD'}<br>
                        <strong>Instructor:</strong> ${event.instructor || 'TBD'}<br>
                        <strong>Status:</strong> <span class="event-status ${event.status}">${event.status}</span>
                    </div>
                </div>
                
                <div style="margin-bottom: 20px;">
                    <strong>Created by:</strong> ${event.firstname} ${event.lastname} (${event.email})<br>
                    <strong>Created on:</strong> ${new Date(event.created_date * 1000).toLocaleString()}
                </div>
                
                ${event.approved_by ? `
                    <div style="margin-bottom: 20px;">
                        <strong>Approved by:</strong> ${event.approver_firstname} ${event.approver_lastname}<br>
                        <strong>Approved on:</strong> ${new Date(event.approved_date * 1000).toLocaleString()}<br>
                        ${event.approval_comments ? `<strong>Comments:</strong> ${event.approval_comments}` : ''}
                    </div>
                ` : ''}
                
                <div>
                    <h5 style="color: #333; margin-bottom: 15px;">Registrations (${registrations.length})</h5>
                    ${registrations.length === 0 ? 
                        '<p style="color: #666; text-align: center; padding: 20px;">No registrations yet</p>' :
                        `<div style="max-height: 200px; overflow-y: auto;">
                            ${registrations.map(reg => `
                                <div style="padding: 10px; border: 1px solid #f0f0f0; border-radius: 5px; margin-bottom: 10px;">
                                    <strong>${reg.firstname} ${reg.lastname}</strong><br>
                                    <small>${reg.email} • Registered: ${new Date(reg.registration_date * 1000).toLocaleString()}</small>
                                </div>
                            `).join('')}
                        </div>`
                    }
                </div>
            `;
        }

        function openApprovalModal(eventId, action) {
            document.getElementById('approvalEventId').value = eventId;
            document.getElementById('approvalAction').value = action;
            openModal('approvalModal');
        }

        function submitApproval(e) {
            e.preventDefault();
            
            const eventId = document.getElementById('approvalEventId').value;
            const action = document.getElementById('approvalAction').value;
            const comments = document.getElementById('approvalComments').value;
            
            fetch('{{config.wwwroot}}/theme/remui_kids/admin/training_events.php?action=update_event_status', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    event_id: eventId,
                    status: action,
                    comments: comments
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.status === 'success') {
                    showMessage(`Event ${action} successfully`, 'success');
                    closeModal('approvalModal');
                    document.getElementById('approvalForm').reset();
                    loadEvents();
                    loadEventStats();
                } else {
                    showMessage('Error updating event status: ' + data.message, 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showMessage('Error updating event status', 'error');
            });
        }

        function openModal(modalId) {
            document.getElementById(modalId).classList.add('show');
        }

        function closeModal(modalId) {
            document.getElementById(modalId).classList.remove('show');
        }

        function showMessage(text, type) {
            const message = document.createElement('div');
            message.className = `message ${type}`;
            message.textContent = text;
            document.body.appendChild(message);
            
            setTimeout(() => {
                message.style.animation = 'slideInRight 0.3s ease-out reverse';
                setTimeout(() => message.remove(), 300);
            }, 5000);
        }

        // Close modals when clicking outside
        window.addEventListener('click', function(e) {
            if (e.target.classList.contains('modal')) {
                e.target.classList.remove('show');
            }
        });
    </script>
</body>
</html>
