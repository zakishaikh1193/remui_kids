<div class="detail-page">
    <!-- Header Section -->
    <div class="detail-header">
        <div class="header-content">
            <div class="back-button">
                <a href="javascript:history.back()" class="btn-back">
                    <i class="fa fa-arrow-left"></i>
                    Back to Dashboard
                </a>
            </div>
            <div class="header-info">
                <h1 class="detail-title">
                    <i class="fa fa-clock"></i>
                    Pending Approvals Details
                </h1>
                <p class="detail-subtitle">Training events awaiting approval</p>
            </div>
        </div>
    </div>

    <!-- Statistics Overview -->
    <div class="stats-overview">
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fa fa-clock"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="pending-approvals">-</div>
                    <div class="stat-label">Pending Approvals</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fa fa-check-circle"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="approved-this-week">-</div>
                    <div class="stat-label">Approved This Week</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fa fa-times-circle"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="rejected-this-week">-</div>
                    <div class="stat-label">Rejected This Week</div>
                </div>
            </div>
            <div class="stat-card">
                <div class="stat-icon">
                    <i class="fa fa-calendar"></i>
                </div>
                <div class="stat-content">
                    <div class="stat-number" id="total-events">-</div>
                    <div class="stat-label">Total Events</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Filters and Search -->
    <div class="filters-section">
        <div class="filters-container">
            <div class="search-box">
                <input type="text" id="searchInput" placeholder="Search training events..." class="search-input">
                <button id="searchBtn" class="search-btn">
                    <i class="fa fa-search"></i>
                </button>
            </div>
            <div class="filter-controls">
                <select id="sortSelect" class="filter-select">
                    <option value="startdatetime">Sort by Event Date</option>
                    <option value="name">Sort by Event Name</option>
                    <option value="firstname">Sort by User Name</option>
                    <option value="email">Sort by Email</option>
                </select>
                <select id="orderSelect" class="filter-select">
                    <option value="DESC">Most Recent First</option>
                    <option value="ASC">Oldest First</option>
                </select>
                <select id="perPageSelect" class="filter-select">
                    <option value="20">20 per page</option>
                    <option value="50">50 per page</option>
                    <option value="100">100 per page</option>
                </select>
            </div>
        </div>
    </div>

    <!-- Events Table -->
    <div class="table-container">
        <div class="table-header">
            <h3>Pending Training Events</h3>
            <div class="table-actions">
                <button id="refreshBtn" class="btn-refresh">
                    <i class="fa fa-refresh"></i>
                    Refresh
                </button>
                <button id="approveAllBtn" class="btn-approve">
                    <i class="fa fa-check"></i>
                    Approve All
                </button>
            </div>
        </div>
        
        <div class="table-wrapper">
            <table class="events-table">
                <thead>
                    <tr>
                        <th>
                            <input type="checkbox" id="selectAll" class="checkbox">
                        </th>
                        <th>Event Title</th>
                        <th>User Name</th>
                        <th>Email</th>
                        <th>Event Date</th>
                        <th>Course</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="eventsTableBody">
                    <tr>
                        <td colspan="8" class="loading-cell">
                            <div class="loading-spinner">
                                <i class="fa fa-spinner fa-spin"></i>
                                Loading pending approvals...
                            </div>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
.detail-page {
    padding: 20px;
    background: #f8f9fa;
    min-height: 100vh;
}

.detail-header {
    background: linear-gradient(135deg, #6f42c1 0%, #5a32a3 100%);
    color: white;
    padding: 30px;
    border-radius: 15px;
    margin-bottom: 30px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
}

.header-content {
    display: flex;
    align-items: center;
    gap: 30px;
}

.back-button .btn-back {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    padding: 12px 20px;
    border-radius: 8px;
    text-decoration: none;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: all 0.3s ease;
}

.back-button .btn-back:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateX(-5px);
}

.detail-title {
    font-size: 2.5rem;
    font-weight: 700;
    margin: 0;
    display: flex;
    align-items: center;
    gap: 15px;
}

.detail-subtitle {
    font-size: 1.1rem;
    margin: 10px 0 0 0;
    opacity: 0.9;
}

.stats-overview {
    margin-bottom: 30px;
}

.stats-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
}

.stat-card {
    background: white;
    padding: 25px;
    border-radius: 15px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
    display: flex;
    align-items: center;
    gap: 20px;
    transition: all 0.3s ease;
}

.stat-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
}

.stat-icon {
    width: 60px;
    height: 60px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    color: white;
}

.stat-card:nth-child(1) .stat-icon { background: linear-gradient(135deg, #6f42c1, #5a32a3); }
.stat-card:nth-child(2) .stat-icon { background: linear-gradient(135deg, #28a745, #218838); }
.stat-card:nth-child(3) .stat-icon { background: linear-gradient(135deg, #dc3545, #c0392b); }
.stat-card:nth-child(4) .stat-icon { background: linear-gradient(135deg, #17a2b8, #138496); }

.stat-number {
    font-size: 2rem;
    font-weight: 700;
    color: #2c3e50;
    margin-bottom: 5px;
}

.stat-label {
    font-size: 0.9rem;
    color: #6c757d;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.filters-section {
    background: white;
    padding: 25px;
    border-radius: 15px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
    margin-bottom: 30px;
}

.filters-container {
    display: flex;
    gap: 20px;
    align-items: center;
    flex-wrap: wrap;
}

.search-box {
    display: flex;
    flex: 1;
    min-width: 300px;
}

.search-input {
    flex: 1;
    padding: 12px 20px;
    border: 2px solid #e9ecef;
    border-radius: 8px 0 0 8px;
    font-size: 1rem;
    transition: all 0.3s ease;
}

.search-input:focus {
    outline: none;
    border-color: #6f42c1;
    box-shadow: 0 0 0 3px rgba(111, 66, 193, 0.1);
}

.search-btn {
    background: #6f42c1;
    color: white;
    border: none;
    padding: 12px 20px;
    border-radius: 0 8px 8px 0;
    cursor: pointer;
    transition: all 0.3s ease;
}

.search-btn:hover {
    background: #5a32a3;
}

.filter-controls {
    display: flex;
    gap: 15px;
}

.filter-select {
    padding: 12px 15px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 0.9rem;
    background: white;
    cursor: pointer;
    transition: all 0.3s ease;
}

.filter-select:focus {
    outline: none;
    border-color: #6f42c1;
}

.table-container {
    background: white;
    border-radius: 15px;
    box-shadow: 0 5px 20px rgba(0, 0, 0, 0.08);
    overflow: hidden;
}

.table-header {
    padding: 25px;
    border-bottom: 1px solid #e9ecef;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.table-header h3 {
    margin: 0;
    color: #2c3e50;
    font-size: 1.5rem;
}

.table-actions {
    display: flex;
    gap: 15px;
}

.btn-refresh, .btn-approve {
    padding: 10px 20px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    font-size: 0.9rem;
    display: flex;
    align-items: center;
    gap: 8px;
    transition: all 0.3s ease;
}

.btn-refresh {
    background: #17a2b8;
    color: white;
}

.btn-refresh:hover {
    background: #138496;
}

.btn-approve {
    background: #28a745;
    color: white;
}

.btn-approve:hover {
    background: #218838;
}

.table-wrapper {
    overflow-x: auto;
}

.events-table {
    width: 100%;
    border-collapse: collapse;
}

.events-table th {
    background: #f8f9fa;
    padding: 15px;
    text-align: left;
    font-weight: 600;
    color: #495057;
    border-bottom: 2px solid #e9ecef;
}

.events-table td {
    padding: 15px;
    border-bottom: 1px solid #e9ecef;
    vertical-align: middle;
}

.events-table tr:hover {
    background: #f8f9fa;
}

.loading-cell {
    text-align: center;
    padding: 40px;
}

.loading-spinner {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 10px;
    color: #6c757d;
    font-size: 1.1rem;
}

.checkbox {
    width: 18px;
    height: 18px;
    cursor: pointer;
}

.event-title {
    font-weight: 600;
    color: #2c3e50;
}

.event-instructor {
    color: #6c757d;
}

.event-date {
    color: #495057;
    font-weight: 500;
}

.event-duration {
    color: #6c757d;
    font-size: 0.9rem;
}

.event-participants {
    color: #495057;
    font-weight: 500;
}

.status-badge {
    padding: 4px 12px;
    border-radius: 20px;
    font-size: 0.8rem;
    font-weight: 600;
    text-transform: uppercase;
}

.status-pending {
    background: #fff3cd;
    color: #856404;
}

.action-buttons {
    display: flex;
    gap: 8px;
}

.btn-action {
    padding: 6px 12px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 0.8rem;
    transition: all 0.3s ease;
}

.btn-approve {
    background: #28a745;
    color: white;
}

.btn-approve:hover {
    background: #218838;
}

.btn-reject {
    background: #dc3545;
    color: white;
}

.btn-reject:hover {
    background: #c82333;
}

.btn-view {
    background: #6c757d;
    color: white;
}

.btn-view:hover {
    background: #5a6268;
}

@media (max-width: 768px) {
    .filters-container {
        flex-direction: column;
        align-items: stretch;
    }
    
    .search-box {
        min-width: auto;
    }
    
    .filter-controls {
        flex-wrap: wrap;
    }
    
    .table-header {
        flex-direction: column;
        gap: 15px;
        align-items: stretch;
    }
    
    .table-actions {
        justify-content: center;
    }
    
    .pagination-container {
        flex-direction: column;
        gap: 15px;
        align-items: stretch;
    }
}
</style>

<script>
let currentPage = 1;
let currentPerPage = 20;
let currentSearch = '';
let currentSort = 'startdatetime';
let currentOrder = 'DESC';
let totalPages = 1;

document.addEventListener('DOMContentLoaded', function() {
    loadStats();
    loadEvents();
    initializeEventListeners();
});

function initializeEventListeners() {
    document.getElementById('searchBtn').addEventListener('click', handleSearch);
    document.getElementById('searchInput').addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            handleSearch();
        }
    });
    
    document.getElementById('sortSelect').addEventListener('change', function() {
        currentSort = this.value;
        loadEvents();
    });
    
    document.getElementById('orderSelect').addEventListener('change', function() {
        currentOrder = this.value;
        loadEvents();
    });
    
    document.getElementById('perPageSelect').addEventListener('change', function() {
        currentPerPage = parseInt(this.value);
        currentPage = 1;
        loadEvents();
    });
    
    document.getElementById('refreshBtn').addEventListener('click', function() {
        loadStats();
        loadEvents();
    });
    
    document.getElementById('approveAllBtn').addEventListener('click', approveAllSelected);
    
    document.getElementById('selectAll').addEventListener('change', function() {
        const checkboxes = document.querySelectorAll('.event-checkbox');
        checkboxes.forEach(checkbox => {
            checkbox.checked = this.checked;
        });
    });
    
    document.getElementById('prevPage').addEventListener('click', function() {
        if (currentPage > 1) {
            currentPage--;
            loadEvents();
        }
    });
    
    document.getElementById('nextPage').addEventListener('click', function() {
        if (currentPage < totalPages) {
            currentPage++;
            loadEvents();
        }
    });
}

function handleSearch() {
    currentSearch = document.getElementById('searchInput').value.trim();
    currentPage = 1;
    loadEvents();
}

function loadStats() {
    fetch('{{config.wwwroot}}/theme/remui_kids/admin/detail_pending_approvals.php?action=get_approval_stats')
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                document.getElementById('pending-approvals').textContent = data.stats.pending_approvals;
                document.getElementById('approved-this-week').textContent = data.stats.approved_this_week;
                document.getElementById('rejected-this-week').textContent = data.stats.rejected_this_week;
                document.getElementById('total-events').textContent = data.stats.total_events;
            }
        })
        .catch(error => {
            console.error('Error loading stats:', error);
        });
}

function loadEvents() {
    const params = new URLSearchParams({
        action: 'get_pending_approvals',
        page: currentPage,
        per_page: currentPerPage,
        search: currentSearch,
        sort: currentSort,
        order: currentOrder
    });
    
    fetch(`{{config.wwwroot}}/theme/remui_kids/admin/detail_pending_approvals.php?${params}`)
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                displayEvents(data.events);
                updatePagination(data);
            } else {
                console.error('Error loading events:', data.message);
            }
        })
        .catch(error => {
            console.error('Error loading events:', error);
        });
}

function displayEvents(events) {
    const tbody = document.getElementById('eventsTableBody');
    
    if (events.length === 0) {
        tbody.innerHTML = '<tr><td colspan="8" class="loading-cell">No pending approvals found</td></tr>';
        return;
    }
    
    tbody.innerHTML = events.map(event => `
        <tr>
            <td>
                <input type="checkbox" class="event-checkbox" value="${event.approval_id}">
            </td>
            <td>
                <div class="event-title">${event.title}</div>
            </td>
            <td>
                <div class="event-instructor">${event.firstname} ${event.lastname}</div>
            </td>
            <td>
                <div class="event-email">${event.email}</div>
            </td>
            <td>
                <div class="event-date">${formatDate(event.startdatetime)}</div>
            </td>
            <td>
                <div class="event-course">${event.course_name}</div>
            </td>
            <td>
                <span class="status-badge status-pending">Pending</span>
            </td>
            <td>
                <div class="action-buttons">
                    <button class="btn-action btn-view" onclick="viewEvent(${event.id})">
                        <i class="fa fa-eye"></i>
                    </button>
                    <button class="btn-action btn-approve" onclick="approveEvent(${event.approval_id})">
                        <i class="fa fa-check"></i>
                    </button>
                    <button class="btn-action btn-reject" onclick="rejectEvent(${event.approval_id})">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </td>
        </tr>
    `).join('');
}

function formatDate(timestamp) {
    return new Date(timestamp * 1000).toLocaleDateString();
}

function approveEvent(approvalId) {
    if (confirm('Are you sure you want to approve this training event?')) {
        fetch('{{config.wwwroot}}/theme/remui_kids/admin/detail_pending_approvals.php?action=approve_event', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                approval_id: approvalId,
                action: 'approve'
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                alert('Event approved successfully!');
                loadEvents();
                loadStats();
            } else {
                alert('Error: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error approving event');
        });
    }
}

function rejectEvent(approvalId) {
    if (confirm('Are you sure you want to reject this training event?')) {
        fetch('{{config.wwwroot}}/theme/remui_kids/admin/detail_pending_approvals.php?action=approve_event', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                approval_id: approvalId,
                action: 'reject'
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                alert('Event rejected successfully!');
                loadEvents();
                loadStats();
            } else {
                alert('Error: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('Error rejecting event');
        });
    }
}

function viewEvent(eventId) {
    // Open event details
    alert('View event details for ID: ' + eventId);
}

function approveAllSelected() {
    const selectedCheckboxes = document.querySelectorAll('.event-checkbox:checked');
    if (selectedCheckboxes.length === 0) {
        alert('Please select events to approve');
        return;
    }
    
    if (confirm(`Are you sure you want to approve ${selectedCheckboxes.length} selected events?`)) {
        const approvalIds = Array.from(selectedCheckboxes).map(cb => cb.value);
        
        // Process each approval
        let processed = 0;
        approvalIds.forEach(approvalId => {
            fetch('{{config.wwwroot}}/theme/remui_kids/admin/detail_pending_approvals.php?action=approve_event', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    approval_id: approvalId,
                    action: 'approve'
                })
            })
            .then(response => response.json())
            .then(data => {
                processed++;
                if (processed === approvalIds.length) {
                    alert(`${approvalIds.length} events approved successfully!`);
                    loadEvents();
                    loadStats();
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Error approving some events');
            });
        });
    }
}

function updatePagination(data) {
    totalPages = data.total_pages;
    
    document.getElementById('paginationInfo').textContent = 
        `Showing ${((data.page - 1) * data.per_page) + 1} to ${Math.min(data.page * data.per_page, data.total_count)} of ${data.total_count} pending approvals`;
    
    document.getElementById('prevPage').disabled = currentPage <= 1;
    document.getElementById('nextPage').disabled = currentPage >= totalPages;
    
    // Update page numbers
    const pageNumbers = document.getElementById('pageNumbers');
    pageNumbers.innerHTML = '';
    
    const startPage = Math.max(1, currentPage - 2);
    const endPage = Math.min(totalPages, currentPage + 2);
    
    for (let i = startPage; i <= endPage; i++) {
        const pageBtn = document.createElement('button');
        pageBtn.className = `page-number ${i === currentPage ? 'active' : ''}`;
        pageBtn.textContent = i;
        pageBtn.addEventListener('click', function() {
            currentPage = i;
            loadEvents();
        });
        pageNumbers.appendChild(pageBtn);
    }
}
</script>
