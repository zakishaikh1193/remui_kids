<div class="users-management-dashboard">
    <!-- Header Section -->
    <div class="dashboard-header">
        <div class="header-content">
            <h1 class="dashboard-title">Users Management</h1>
            <p class="dashboard-subtitle">Comprehensive user administration and management tools</p>
        </div>
    </div>

    <!-- Navigation Tabs -->
    <div class="dashboard-nav">
        <div class="nav-tabs">
            <button class="nav-tab active" data-tab="overview">
                <i class="fa fa-chart-pie"></i>
                Overview
            </button>
            <button class="nav-tab" data-tab="create" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/create_user.php'">
                <i class="fa fa-user-plus"></i>
                Create User
            </button>
            <button class="nav-tab" data-tab="edit" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/edit_users.php'">
                <i class="fa fa-user-edit"></i>
                Edit Users
            </button>
            <button class="nav-tab" data-tab="assign" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/assign_school.php'">
                <i class="fa fa-school"></i>
                Assign to School
            </button>
            <button class="nav-tab" data-tab="upload" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/upload_users.php'">
                <i class="fa fa-upload"></i>
                Upload Users
            </button>
            <button class="nav-tab" data-tab="download" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/bulk_download.php'">
                <i class="fa fa-download"></i>
                Bulk Download
            </button>
            <button class="nav-tab" data-tab="events" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/training_events.php'">
                <i class="fa fa-calendar-check"></i>
                Training Events
            </button>
        </div>
    </div>

    <!-- Overview Tab Content -->
    <div class="tab-content active" id="overview-tab">
        <!-- Statistics Cards -->
        <div class="stats-cards-container">
            <div class="stats-card total-users clickable-card" onclick="openDetailPage('total_users')">
                <div class="card-icon">
                    <i class="fa fa-users"></i>
                </div>
                <div class="card-content">
                    <div class="card-number" id="total-users-count">{{total_users}}</div>
                    <div class="card-title">Total Users</div>
                    <div class="card-description">All registered users</div>
                </div>
                <div class="card-arrow">
                    <i class="fa fa-arrow-right"></i>
                </div>
            </div>

            <div class="stats-card active-users clickable-card" onclick="openDetailPage('active_users')">
                <div class="card-icon">
                    <i class="fa fa-bolt"></i>
                </div>
                <div class="card-content">
                    <div class="card-number" id="active-users-count">{{active_users}}</div>
                    <div class="card-title">Active Users</div>
                    <div class="card-description">Currently active users</div>
                </div>
                <div class="card-arrow">
                    <i class="fa fa-arrow-right"></i>
                </div>
            </div>

            <div class="stats-card pending-approvals clickable-card" onclick="openDetailPage('pending_approvals')">
                <div class="card-icon">
                    <i class="fa fa-clock"></i>
                </div>
                <div class="card-content">
                    <div class="card-number" id="pending-approvals-count">{{pending_approvals}}</div>
                    <div class="card-title">Pending Approvals</div>
                    <div class="card-description">Training events awaiting approval</div>
                </div>
                <div class="card-arrow">
                    <i class="fa fa-arrow-right"></i>
                </div>
            </div>

            <div class="stats-card department-managers clickable-card" onclick="openDetailPage('department_managers')">
                <div class="card-icon">
                    <i class="fa fa-building"></i>
                </div>
                <div class="card-content">
                    <div class="card-number" id="department-managers-count">{{department_managers}}</div>
                    <div class="card-title">Department Managers</div>
                    <div class="card-description">Users with manager role</div>
                </div>
                <div class="card-arrow">
                    <i class="fa fa-arrow-right"></i>
                </div>
            </div>

            <div class="stats-card recent-uploads clickable-card" onclick="openDetailPage('recent_uploads')">
                <div class="card-icon">
                    <i class="fa fa-folder"></i>
                </div>
                <div class="card-content">
                    <div class="card-number" id="recent-uploads-count">{{recent_uploads}}</div>
                    <div class="card-title">Recent Uploads</div>
                    <div class="card-description">Users uploaded this month</div>
                </div>
                <div class="card-arrow">
                    <i class="fa fa-arrow-right"></i>
                </div>
            </div>
        </div>

        <!-- Quick Actions Section -->
        <div class="quick-actions-section">
            <div class="section-header">
                <h3 class="section-title">
                    <i class="fa fa-cog"></i>
                    Quick Actions
                </h3>
            </div>
            <div class="quick-actions-grid">
                <button class="quick-action-btn create-user" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/create_user.php'">
                    <div class="action-icon">
                        <i class="fa fa-user-plus"></i>
                    </div>
                    <div class="action-content">
                        <div class="action-title">Create New User</div>
                        <div class="action-subtitle">Click to access</div>
                    </div>
                </button>

                <button class="quick-action-btn bulk-upload" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/upload_users.php'">
                    <div class="action-icon">
                        <i class="fa fa-upload"></i>
                    </div>
                    <div class="action-content">
                        <div class="action-title">Bulk Upload</div>
                        <div class="action-subtitle">Click to access</div>
                    </div>
                </button>

                <button class="quick-action-btn export-users" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/bulk_download.php'">
                    <div class="action-icon">
                        <i class="fa fa-download"></i>
                    </div>
                    <div class="action-content">
                        <div class="action-title">Export Users</div>
                        <div class="action-subtitle">Click to access</div>
                    </div>
                </button>

                <button class="quick-action-btn approve-events" onclick="window.location.href='{{config.wwwroot}}/theme/remui_kids/admin/training_events.php'">
                    <div class="action-icon">
                        <i class="fa fa-check"></i>
                    </div>
                    <div class="action-content">
                        <div class="action-title">Approve Events</div>
                        <div class="action-subtitle">Click to access</div>
                    </div>
                </button>
            </div>
        </div>

        <!-- Recent User Activity Section -->
        <div class="recent-activity-section">
            <div class="section-header">
                <h3 class="section-title">
                    <i class="fa fa-history"></i>
                    Recent User Activity
                </h3>
            </div>
            <div class="activity-timeline">
                {{#recent_activity}}
                <div class="activity-item">
                    <div class="activity-bullet {{#activity_type}}{{#.}}user-created{{/.}}{{/activity_type}}"></div>
                    <div class="activity-content">
                        <div class="activity-text">{{activity_type}} {{firstname}} {{lastname}}</div>
                        <div class="activity-time">{{#timecreated}}{{.}}{{/timecreated}}</div>
                    </div>
                </div>
                {{/recent_activity}}
            </div>
        </div>
    </div>


</div>

<style>
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap');

* {
    box-sizing: border-box;
}

.users-management-dashboard {
    padding: 20px;
    max-width: 1800px;
    margin: 0 auto;
    font-family: 'Inter', sans-serif;
    background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    min-height: 100vh;
    animation: fadeIn 0.8s ease-out;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Header Styles */
.dashboard-header {
    background: #f3e5f5;
    border-radius: 20px;
    padding: 25px 40px;
    margin-bottom: 30px;
    color: #7b1fa2;
    position: relative;
    overflow: hidden;
    box-shadow: 0 20px 40px rgba(123, 31, 162, 0.2);
    animation: slideInDown 0.8s ease-out;
    text-align: center;
}

@keyframes slideInDown {
    from {
        opacity: 0;
        transform: translateY(-50px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.dashboard-header::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
   
}

@keyframes float {
    0%, 100% {
        transform: translateY(0px) rotate(0deg);
    }
    50% {
        transform: translateY(-20px) rotate(180deg);
    }
}

.dashboard-title {
    font-size: 2rem;
    font-weight: 700;
    margin: 0 0 8px 0;
    color: #7b1fa2;
    position: relative;
    z-index: 2;
    text-shadow: 0 2px 4px rgba(123, 31, 162, 0.2);
    
}

@keyframes titleGlow {
    from {
        text-shadow: 0 2px 4px rgba(123, 31, 162, 0.2);
    }
    to {
        text-shadow: 0 4px 12px rgba(123, 31, 162, 0.4);
    }
}

.dashboard-subtitle {
    font-size: 1rem;
    margin: 0;
    opacity: 0.8;
    position: relative;
    z-index: 2;
    font-weight: 400;
    color: #7b1fa2;
}

/* Navigation Tabs */
.dashboard-nav {
    margin-bottom: 30px;
    animation: slideInUp 0.8s ease-out 0.2s both;
}

@keyframes slideInUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.nav-tabs {
    display: flex;
    gap: 15px;
    flex-wrap: wrap;
    background: rgba(255, 255, 255, 0.9);
    padding: 15px;
    border-radius: 15px;
    backdrop-filter: blur(10px);
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
}

.nav-tab {
    background: linear-gradient(145deg, #ffffff, #f0f0f0);
    border: none;
    border-radius: 12px;
    padding: 15px 25px;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    display: flex;
    align-items: center;
    gap: 10px;
    font-weight: 600;
    color: #6c757d;
    position: relative;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
}

.nav-tab::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
    transition: left 0.5s;
}

.nav-tab:hover::before {
    left: 100%;
}

.nav-tab:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    color: #495057;
}

.nav-tab.active {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(102, 126, 234, 0.4);
}

.nav-tab i {
    font-size: 16px;
    transition: transform 0.3s ease;
}

.nav-tab:hover i {
    transform: scale(1.2);
}

/* Statistics Cards */
.stats-cards-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 25px;
    margin-bottom: 40px;
    animation: slideInUp 0.8s ease-out 0.4s both;
}

.stats-card {
    background: linear-gradient(145deg, #ffffff, #f8f9fa);
    border-radius: 20px;
    padding: 30px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    gap: 25px;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    position: relative;
    overflow: hidden;
    border: 1px solid rgba(255, 255, 255, 0.2);
}

.stats-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(90deg, #667eea, #764ba2);
    transform: scaleX(0);
    transition: transform 0.3s ease;
}

.stats-card:hover::before {
    transform: scaleX(1);
}

.stats-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

/* Clickable card styles */
.clickable-card {
    cursor: pointer;
    position: relative;
    user-select: none;
}

.clickable-card:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.15);
}

.clickable-card:hover .card-arrow {
    transform: translateX(5px);
    opacity: 1;
}

.clickable-card:active {
    transform: translateY(-4px) scale(1.01);
    transition: transform 0.1s ease;
}

.card-arrow {
    position: absolute;
    right: 20px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 18px;
    color: #667eea;
    opacity: 0.6;
    transition: all 0.3s ease;
    pointer-events: none;
}

/* Ensure card content doesn't interfere with click */
.clickable-card .card-content {
    pointer-events: none;
}

.clickable-card .card-icon {
    pointer-events: none;
}

.stats-card:nth-child(1) { animation-delay: 0.1s; }
.stats-card:nth-child(2) { animation-delay: 0.2s; }
.stats-card:nth-child(3) { animation-delay: 0.3s; }
.stats-card:nth-child(4) { animation-delay: 0.4s; }
.stats-card:nth-child(5) { animation-delay: 0.5s; }

.card-icon {
    width: 70px;
    height: 70px;
    border-radius: 18px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 28px;
    color: white;
    position: relative;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
}

.stats-card:hover .card-icon {
    transform: scale(1.1) rotate(5deg);
}

.total-users .card-icon { 
    background: linear-gradient(135deg, #6f42c1, #8e44ad);
}
.active-users .card-icon { 
    background: linear-gradient(135deg, #fd7e14, #e67e22);
}
.pending-approvals .card-icon { 
    background: linear-gradient(135deg, #6f42c1, #8e44ad);
}
.department-managers .card-icon { 
    background: linear-gradient(135deg, #6c757d, #495057);
}
.recent-uploads .card-icon { 
    background: linear-gradient(135deg, #ffc107, #f39c12);
}

.card-content {
    flex: 1;
}

.card-number {
    font-size: 2.5rem;
    font-weight: 800;
    color: #2c3e50;
    margin-bottom: 8px;
    transition: all 0.3s ease;
    text-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.stats-card:hover .card-number {
    transform: scale(1.05);
    color: #667eea;
}

.card-title {
    font-size: 1.1rem;
    font-weight: 700;
    color: #495057;
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.card-description {
    font-size: 0.9rem;
    color: #6c757d;
    font-weight: 400;
    line-height: 1.4;
}

/* Quick Actions */
.quick-actions-section {
    background: linear-gradient(145deg, #ffffff, #f8f9fa);
    border-radius: 20px;
    padding: 35px;
    margin-bottom: 30px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
    
}

.quick-actions-section::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(102, 126, 234, 0.05) 0%, transparent 70%);
    
}

@keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

.section-header {
    margin-bottom: 25px;
    position: relative;
    z-index: 2;
}

.section-title {
    font-size: 1.5rem;
    font-weight: 700;
    color: #2c3e50;
    margin: 0;
    display: flex;
    align-items: center;
    gap: 12px;
    text-shadow: 0 2px 4px rgba(0,0,0,0.1);
}

.section-title i {
    color: #667eea;
    animation: pulse 2s ease-in-out infinite;
}

@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.1); }
}

.quick-actions-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 20px;
    position: relative;
    z-index: 2;
}

.quick-action-btn {
    background: linear-gradient(145deg, #ffffff, #f8f9fa);
    border: none;
    border-radius: 15px;
    padding: 25px;
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    display: flex;
    align-items: center;
    gap: 20px;
    text-align: left;
    position: relative;
    overflow: hidden;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
}

.quick-action-btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
    transition: left 0.6s;
}

.quick-action-btn:hover::before {
    left: 100%;
}

.quick-action-btn:hover {
    transform: translateY(-5px) scale(1.03);
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
}

.create-user:hover { 
    background: linear-gradient(145deg, #d4edda, #c3e6cb);
    box-shadow: 0 15px 35px rgba(40, 167, 69, 0.3);
}
.bulk-upload:hover { 
    background: linear-gradient(145deg, #cce7ff, #b3d9ff);
    box-shadow: 0 15px 35px rgba(0, 123, 255, 0.3);
}
.export-users:hover { 
    background: linear-gradient(145deg, #e2d9f3, #d1c4e9);
    box-shadow: 0 15px 35px rgba(111, 66, 193, 0.3);
}
.approve-events:hover { 
    background: linear-gradient(145deg, #ffeaa7, #fdcb6e);
    box-shadow: 0 15px 35px rgba(253, 126, 20, 0.3);
}

.action-icon {
    width: 50px;
    height: 50px;
    border-radius: 12px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    color: white;
    position: relative;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
}

.quick-action-btn:hover .action-icon {
    transform: scale(1.1) rotate(5deg);
}

.create-user .action-icon { 
    background: linear-gradient(135deg, #28a745, #20c997);
}
.bulk-upload .action-icon { 
    background: linear-gradient(135deg, #007bff, #6610f2);
}
.export-users .action-icon { 
    background: linear-gradient(135deg, #6f42c1, #e83e8c);
}
.approve-events .action-icon { 
    background: linear-gradient(135deg, #fd7e14, #ffc107);
}

.action-content {
    flex: 1;
}

.action-title {
    font-weight: 700;
    color: #2c3e50;
    margin-bottom: 8px;
    font-size: 1.1rem;
    transition: color 0.3s ease;
}

.quick-action-btn:hover .action-title {
    color: #667eea;
}

.action-subtitle {
    font-size: 0.9rem;
    color: #6c757d;
    font-weight: 500;
}

/* Recent Activity */
.recent-activity-section {
    background: linear-gradient(145deg, #ffffff, #f8f9fa);
    border-radius: 20px;
    padding: 35px;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
    animation: slideInUp 0.8s ease-out 0.8s both;
}

.recent-activity-section::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(102, 126, 234, 0.03) 0%, transparent 70%);
    animation: float 8s ease-in-out infinite;
}

.activity-timeline {
    position: relative;
    z-index: 2;
}

.activity-item {
    display: flex;
    align-items: center;
    gap: 20px;
    margin-bottom: 25px;
    position: relative;
    padding: 15px;
    border-radius: 12px;
    transition: all 0.3s ease;
    animation: slideInLeft 0.6s ease-out both;
}

.activity-item:nth-child(1) { animation-delay: 0.1s; }
.activity-item:nth-child(2) { animation-delay: 0.2s; }
.activity-item:nth-child(3) { animation-delay: 0.3s; }
.activity-item:nth-child(4) { animation-delay: 0.4s; }

@keyframes slideInLeft {
    from {
        opacity: 0;
        transform: translateX(-30px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

.activity-item:hover {
    background: rgba(102, 126, 234, 0.05);
    transform: translateX(5px);
}

.activity-item:not(:last-child)::after {
    content: '';
    position: absolute;
    left: 19px;
    top: 50px;
    width: 3px;
    height: 30px;
    background: linear-gradient(to bottom, #667eea, transparent);
    border-radius: 2px;
}

.activity-bullet {
    width: 20px;
    height: 20px;
    border-radius: 50%;
    background: linear-gradient(135deg, #6c757d, #495057);
    flex-shrink: 0;
    position: relative;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    transition: all 0.3s ease;
}

.activity-item:hover .activity-bullet {
    transform: scale(1.2);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);
}

.activity-bullet.user-created { 
    background: linear-gradient(135deg, #28a745, #20c997);
    animation: pulse 2s ease-in-out infinite;
}

.activity-bullet::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 8px;
    height: 8px;
    background: white;
    border-radius: 50%;
    opacity: 0.8;
}

.activity-content {
    flex: 1;
}

.activity-text {
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 8px;
    font-size: 1rem;
    transition: color 0.3s ease;
}

.activity-item:hover .activity-text {
    color: #667eea;
}

.activity-time {
    font-size: 0.9rem;
    color: #6c757d;
    font-weight: 500;
}

/* Tab Content */
.tab-content {
    display: none;
    animation: fadeIn 0.5s ease-in-out;
}

.tab-content.active {
    display: block;
}

.tab-placeholder {
    background: linear-gradient(145deg, #ffffff, #f8f9fa);
    border-radius: 20px;
    padding: 60px 40px;
    text-align: center;
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
    position: relative;
    overflow: hidden;
}

.tab-placeholder::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(102, 126, 234, 0.05) 0%, transparent 70%);
    animation: rotate 15s linear infinite;
}

.tab-placeholder h3 {
    color: #2c3e50;
    margin-bottom: 20px;
    font-size: 1.8rem;
    font-weight: 700;
    position: relative;
    z-index: 2;
}

.tab-placeholder p {
    color: #6c757d;
    margin: 0;
    font-size: 1.1rem;
    font-weight: 500;
    position: relative;
    z-index: 2;
}

/* Loading Animation */
.loading-spinner {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid rgba(102, 126, 234, 0.3);
    border-radius: 50%;
    border-top-color: #667eea;
    animation: spin 1s ease-in-out infinite;
    margin-right: 10px;
}

@keyframes spin {
    to { transform: rotate(360deg); }
}

/* Success/Error Messages */
.message {
    padding: 15px 20px;
    border-radius: 10px;
    margin: 20px 0;
    font-weight: 600;
    animation: slideInDown 0.5s ease-out;
}

.message.success {
    background: linear-gradient(135deg, #d4edda, #c3e6cb);
    color: #155724;
    border-left: 4px solid #28a745;
}

.message.error {
    background: linear-gradient(135deg, #f8d7da, #f5c6cb);
    color: #721c24;
    border-left: 4px solid #dc3545;
}

/* Responsive Design */
@media (max-width: 768px) {
    .users-management-dashboard {
        padding: 15px;
    }
    
    .dashboard-title {
        font-size: 2.2rem;
    }
    
    .dashboard-header {
        padding: 25px;
    }
    
    .nav-tabs {
        flex-direction: column;
        gap: 10px;
    }
    
    .nav-tab {
        padding: 12px 20px;
        justify-content: center;
    }
    
    .stats-cards-container {
        grid-template-columns: 1fr;
        gap: 15px;
    }
    
    .stats-card {
        padding: 20px;
    }
    
    .quick-actions-grid {
        grid-template-columns: 1fr;
        gap: 15px;
    }
    
    .quick-action-btn {
        padding: 20px;
    }
    
    .activity-item {
        padding: 12px;
        gap: 15px;
    }
}

@media (max-width: 480px) {
    .dashboard-title {
        font-size: 1.8rem;
    }
    
    .card-number {
        font-size: 2rem;
    }
    
    .action-icon {
        width: 40px;
        height: 40px;
        font-size: 16px;
    }
    
    .activity-bullet {
        width: 16px;
        height: 16px;
    }
}
</style>

<script>
// Enhanced animations and interactions
document.addEventListener('DOMContentLoaded', function() {
    // Initialize animations
    initializeAnimations();
    
    // Tab switching functionality
    initializeTabs();
    
    // Add hover effects to cards
    initializeCardEffects();
    
    // Initialize auto-refresh
    initializeAutoRefresh();
});

function initializeAnimations() {
    // Animate numbers on load
    animateNumbers();
    
    // Add scroll animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.style.animationPlayState = 'running';
            }
        });
    }, observerOptions);
    
    document.querySelectorAll('.stats-card, .quick-action-btn, .activity-item').forEach(el => {
        observer.observe(el);
    });
}

function animateNumbers() {
    const numberElements = document.querySelectorAll('.card-number');
    
    numberElements.forEach(element => {
        const finalValue = parseInt(element.textContent);
        const duration = 2000;
        const increment = finalValue / (duration / 16);
        let currentValue = 0;
        
        const timer = setInterval(() => {
            currentValue += increment;
            if (currentValue >= finalValue) {
                currentValue = finalValue;
                clearInterval(timer);
            }
            element.textContent = Math.floor(currentValue);
        }, 16);
    });
}

function initializeTabs() {
    const tabs = document.querySelectorAll('.nav-tab');
    const tabContents = document.querySelectorAll('.tab-content');
    
    tabs.forEach(tab => {
        tab.addEventListener('click', function() {
            const targetTab = this.getAttribute('data-tab');
            
            // Add click animation
            this.style.transform = 'scale(0.95)';
            setTimeout(() => {
                this.style.transform = '';
            }, 150);
            
            // Remove active class from all tabs and contents
            tabs.forEach(t => t.classList.remove('active'));
            tabContents.forEach(content => {
                content.classList.remove('active');
                content.style.opacity = '0';
            });
            
            // Add active class to clicked tab and corresponding content
            this.classList.add('active');
            const targetContent = document.getElementById(targetTab + '-tab');
            targetContent.classList.add('active');
            
            // Fade in new content
            setTimeout(() => {
                targetContent.style.opacity = '1';
            }, 100);
        });
    });
}

function initializeCardEffects() {
    const cards = document.querySelectorAll('.stats-card, .quick-action-btn');
    
    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-8px) scale(1.02)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0) scale(1)';
        });
    });
}

function initializeAutoRefresh() {
    // Auto-refresh every 30 seconds
    setInterval(refreshDashboardStats, 30000);
    
    // Add refresh button functionality
    const refreshButtons = document.querySelectorAll('[data-refresh]');
    refreshButtons.forEach(button => {
        button.addEventListener('click', refreshDashboardStats);
    });
}

// Enhanced quick action handlers with loading states
function handleQuickAction(action) {
    const button = event.target.closest('.quick-action-btn');
    const originalContent = button.innerHTML;
    
    // Show loading state
    button.innerHTML = `
        <div class="loading-spinner"></div>
        <div class="action-content">
            <div class="action-title">Processing...</div>
            <div class="action-subtitle">Please wait</div>
        </div>
    `;
    button.disabled = true;
    
    fetch('{{config.wwwroot}}/theme/remui_kids/admin/users_management_dashboard.php?action=' + action)
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                showMessage(data.message, 'success');
            } else {
                showMessage('Error: ' + data.message, 'error');
            }
        })
        .catch(error => {
            console.error('Error:', error);
            showMessage('An error occurred while processing your request.', 'error');
        })
        .finally(() => {
            // Restore original content
            button.innerHTML = originalContent;
            button.disabled = false;
        });
}

// Enhanced refresh function with animations
function refreshDashboardStats() {
    const cards = document.querySelectorAll('.stats-card');
    
    // Add loading animation to cards
    cards.forEach(card => {
        card.style.opacity = '0.7';
        card.style.transform = 'scale(0.98)';
    });
    
    fetch('{{config.wwwroot}}/theme/remui_kids/admin/users_management_dashboard.php?action=get_dashboard_stats')
        .then(response => response.json())
        .then(data => {
            if (data.status === 'success') {
                // Animate number updates
                animateNumberUpdate('total-users-count', data.total_users);
                animateNumberUpdate('active-users-count', data.active_users);
                animateNumberUpdate('pending-approvals-count', data.pending_approvals);
                animateNumberUpdate('department-managers-count', data.department_managers);
                animateNumberUpdate('recent-uploads-count', data.recent_uploads);
                
                showMessage('Dashboard updated successfully!', 'success');
            }
        })
        .catch(error => {
            console.error('Error refreshing stats:', error);
            showMessage('Failed to refresh dashboard data.', 'error');
        })
        .finally(() => {
            // Restore card animations
            cards.forEach(card => {
                card.style.opacity = '1';
                card.style.transform = 'scale(1)';
            });
        });
}

function animateNumberUpdate(elementId, newValue) {
    const element = document.getElementById(elementId);
    if (!element) return;
    
    const currentValue = parseInt(element.textContent);
    const difference = newValue - currentValue;
    const duration = 1000;
    const increment = difference / (duration / 16);
    let current = currentValue;
    
    const timer = setInterval(() => {
        current += increment;
        if ((increment > 0 && current >= newValue) || (increment < 0 && current <= newValue)) {
            current = newValue;
            clearInterval(timer);
        }
        element.textContent = Math.floor(current);
    }, 16);
}

function showMessage(text, type) {
    // Remove existing messages
    const existingMessages = document.querySelectorAll('.message');
    existingMessages.forEach(msg => msg.remove());
    
    // Create new message
    const message = document.createElement('div');
    message.className = `message ${type}`;
    message.textContent = text;
    
    // Insert at top of dashboard
    const dashboard = document.querySelector('.users-management-dashboard');
    dashboard.insertBefore(message, dashboard.firstChild);
    
    // Auto-remove after 5 seconds
    setTimeout(() => {
        message.style.opacity = '0';
        message.style.transform = 'translateY(-20px)';
        setTimeout(() => message.remove(), 300);
    }, 5000);
}

// Add keyboard shortcuts
document.addEventListener('keydown', function(e) {
    if (e.ctrlKey || e.metaKey) {
        switch(e.key) {
            case 'r':
                e.preventDefault();
                refreshDashboardStats();
                break;
            case '1':
                e.preventDefault();
                document.querySelector('[data-tab="overview"]').click();
                break;
            case '2':
                e.preventDefault();
                document.querySelector('[data-tab="create"]').click();
                break;
        }
    }
});

// Add touch support for mobile
if ('ontouchstart' in window) {
    document.querySelectorAll('.stats-card, .quick-action-btn').forEach(element => {
        element.addEventListener('touchstart', function() {
            this.style.transform = 'scale(0.95)';
        });
        
        element.addEventListener('touchend', function() {
            this.style.transform = '';
        });
    });
}

// Function to open detail pages for cards
function openDetailPage(cardType) {
    const baseUrl = '{{config.wwwroot}}/theme/remui_kids/admin/';
    
    switch(cardType) {
        case 'total_users':
            window.location.href = baseUrl + 'detail_total_users.php';
            break;
        case 'active_users':
            window.location.href = baseUrl + 'detail_active_users.php';
            break;
        case 'pending_approvals':
            window.location.href = '{{config.wwwroot}}/admin/user/user_bulk.php';
            break;
        case 'department_managers':
            window.location.href = baseUrl + 'detail_department_managers.php';
            break;
        case 'recent_uploads':
            window.location.href = baseUrl + 'detail_recent_uploads.php';
            break;
        default:
            console.log('Unknown card type:', cardType);
    }
}
</script>
