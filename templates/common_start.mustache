{{!
    This file is part of Moodle - http://moodle.org/

    Moodle is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Moodle is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU General Public License for more details.

    Edwiser RemUI Kids
    @package theme_remui_kids
    @copyright (c) 2025 Kodeit
    @license http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later

}}
{{!
    @template theme_remui_kids/common_start

    Custom common_start template that removes old course headers and stats
}}

{{> theme_remui/head }}

<body {{{ bodyattributes }}}>

<div id='page-loader-wrapper' style='background:#ffffff;position: fixed;top: 0;left: 0;width: 100%;height: 100%;display: flex;justify-content: center;align-items: center;z-index: 9999;overflow:hidden;'>
    {{#loaderimage}}<img src='{{{loaderimage}}}' alt='loader image' style='width: 50px;height: 50px;'>{{/loaderimage}}
</div>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        setTimeout(function() {
            document.querySelector('#page-loader-wrapper').style.display = 'none';
        }, 100);
    });
    if (localStorage.getItem("nighteyewState") == "1") {
        document.querySelector("#page-loader-wrapper").style.background = "#090909";
    }
</script>

{{> core/local/toast/wrapper}}
<div id="page-wrapper" class="d-print-block">

    {{{ output.standard_top_of_body_html }}}

    {{#focusdata.enabled}} {{> theme_remui/navbar_fm }} {{/focusdata.enabled}}

    {{> theme_remui/navbar }}
    {{#courseindex}}
        {{< theme_remui/drawer }}
            {{$id}}theme_remui-drawers-courseindex{{/id}}
            {{$drawerheadercontent}}
                {{> theme_remui/courseindexdrawercontrols}}
            {{/drawerheadercontent}}
            {{$drawerclasses}}drawer drawer-left {{#courseindexopen}}show{{/courseindexopen}}{{/drawerclasses}}
            {{$drawercontent}}
                {{{courseindex}}}
            {{/drawercontent}}
            {{$drawerpreferencename}}drawer-open-index{{/drawerpreferencename}}
            {{$drawerstate}}show-drawer-left{{/drawerstate}}
            {{$tooltipplacement}}right{{/tooltipplacement}}
            {{$closebuttontext}}{{#str}}closecourseindex, core{{/str}}{{/closebuttontext}}
        {{/ theme_remui/drawer}}
    {{/courseindex}}
    {{#hasblocks}}
        {{< theme_remui/drawer }}
            {{$id}}theme_remui-drawers-blocks{{/id}}
            {{$drawerclasses}}drawer drawer-right{{#blockdraweropen}} show{{/blockdraweropen}}{{/drawerclasses}}
            {{$drawercontent}}
                <section class="d-print-none" aria-label="{{#str}}blocks{{/str}}">
                    {{{ addblockbutton }}}
                    {{{ sidepreblocks }}}
                </section>
            {{/drawercontent}}
            {{$drawerpreferencename}}drawer-open-block{{/drawerpreferencename}}
            {{$forceopen}}{{#forceblockdraweropen}}1{{/forceblockdraweropen}}{{/forceopen}}
            {{$drawerstate}}show-drawer-right{{/drawerstate}}
            {{$tooltipplacement}}left{{/tooltipplacement}}
            {{$drawercloseonresize}}1{{/drawercloseonresize}}
            {{$closebuttontext}}{{#str}}closeblockdrawer, core{{/str}}{{/closebuttontext}}
        {{/ theme_remui/drawer}}
    {{/hasblocks}}

        {{#sitenotification}}{{{sitenotification}}}{{/sitenotification}}
        {{#canaddfwtopblocks}}
        <section id="region-fullwidthtop-blocks" class="has-blocks" aria-label="region top blocks">
            <div role="region-main">
                {{{addblockbuttonfwtop}}}
                {{{ sidefwtopblocks }}}
                {{#addblockbuttonfwtop}}
                    <div id="region-fullwidthtop-blocks-indicator" class="container-fluid block-indicator">
                        <font class="text-center p-px-2d5 m-0  bg-white block-indicator-text-wrapper ">
                            {{#str}}full-width-top,theme_remui {{/str}}
                        </font>
                    </div>
                {{/addblockbuttonfwtop}}
            </div>
        </section>
        {{/canaddfwtopblocks}}
        <div id="topofscroll" class="main-inner">
            {{#notification}}{{> theme_remui/product_notification}}{{/notification}}
            
            {{#show_admin_sidebar}}
            <!-- Mobile Sidebar Toggle Button -->
            <button class="sidebar-toggle" onclick="toggleAdminSidebar()">
                <i class="fa fa-bars"></i>
            </button>
            
            <!-- Admin Sidebar for Admin Pages -->
            <div class="admin-sidebar-wrapper" id="admin-sidebar-wrapper">
                {{> theme_remui_kids/admin_sidebar}}
            </div>
            {{/show_admin_sidebar}}
            
            {{#customhomepage}}
                {{{customhomepage}}}
            {{/customhomepage}}

            {{^customhomepage}}
                {{> theme_remui/frontpagesections}}
            {{/customhomepage}}

            <div class="container">
            <div class="drawer-toggles d-flex">
                {{#courseindex}}
                    <div class="drawer-toggler drawer-left-toggle open-nav d-print-none">
                        <button
                            class="btn btn-primary icon-no-margin p-0"
                            data-toggler="drawers"
                            data-action="toggle"
                            data-target="theme_remui-drawers-courseindex"
                            data-toggle="tooltip"
                            data-placement="right"
                            title="{{#str}}opendrawerindex, core{{/str}}"
                        >
                            <span class="sr-only">{{#str}}opendrawerindex, core{{/str}}</span>
                            {{#pix}} t/index_drawer, moodle {{/pix}}
                        </button>
                    </div>
                {{/courseindex}}
                {{#hasblocks}}
                    <div class="drawer-toggler drawer-right-toggle ml-auto d-print-none">
                        <button
                            class="btn btn-primary icon-no-margin p-0"
                            data-toggler="drawers"
                            data-action="toggle"
                            data-target="theme_remui-drawers-blocks"
                            data-toggle="tooltip"
                            data-placement="right"
                            title="{{#str}}opendrawerblocks, core{{/str}}"
                        >
                            <span class="sr-only">{{#str}}opendrawerblocks, core{{/str}}</span>
                            <span class="dir-rtl-hide">
                                <span class="edw-icon edw-icon-Long-Left_24"></span>
                            </span>
                            <span class="dir-ltr-hide">
                                <span class="edw-icon edw-icon-Long-Right_24"></span>
                            </span>
                        </button>
                    </div>
                {{/hasblocks}}
            </div>
            
            

            {{#isdashboardstatsshow}}
                {{> theme_remui/dashboard_stats }}
            {{/isdashboardstatsshow}}

            {{#showpersonlizerinfo}}
                {{> theme_remui/personalizer_info_dashboard }}
            {{/showpersonlizerinfo}}
            {{#secondarymoremenu}}
                {{^show_course_header}}
                <div class="secondary-navigation edw-tabs-navigation d-print-none">
                    {{> core/moremenu}}
                </div>
                {{/show_course_header}}
            {{/secondarymoremenu}}
            {{#canaddtopblocks}}
            <section id="region-top-blocks" class="has-blocks" aria-label="region top blocks">
                <div role="region-main">
                    {{{addblockbuttontop}}}
                    {{{ sidetopblocks }}}
                    {{#addblockbuttontop}}
                    <div id="region-top-blocks-indicator" class="container-fluid block-indicator">
                        <font class="text-center p-px-2d5 m-0  bg-white block-indicator-text-wrapper ">
                            {{#str}}side-top,theme_remui {{/str}}
                        </font>
                    </div>
                    {{/addblockbuttontop}}
                </div>
            </section>
            {{/canaddtopblocks}}

{{#js}}
    require(['jquery'], function($){
        if (localStorage.getItem("nighteyewState") == "1") {

            const lightLogo = document.querySelector('.light-logo');
            const lightLogoMini = document.querySelector('.light-logomini');
            const darkLogo = document.querySelector('.dark-logo');
            const darkLogoMini = document.querySelector('.dark-logomini');

            if (lightLogo) {
                lightLogo.style.display = 'none';
                darkLogo.style.display = 'flex';
            }

            if (lightLogoMini) {
                lightLogoMini.style.display = 'none';
                darkLogoMini.style.display = 'flex';

            } 
        }
    });
{{/js}}

{{#sitenotification}}
{{#js}}
    require(['jquery','theme_remui/user/repository'], function($, UserRepository){
        // Save the preference, after dismiss the announcement
        $('.site-announcement #dismiss_announcement').click(function(){
        {{#applylatestuserpref}}
            UserRepository.setUserPreference('remui_dismised_announcement', true);
        {{/applylatestuserpref}}
        {{^applylatestuserpref}}
             M.util.set_user_preference('remui_dismised_announcement', true);
        {{/applylatestuserpref}}
        });
    });
{{/js}}
{{/sitenotification}}

{{#show_admin_sidebar}}
{{#js}}
    // Admin sidebar functionality
    function toggleAdminSidebar() {
        const sidebar = document.getElementById('admin-sidebar-wrapper');
        if (sidebar) {
            sidebar.classList.toggle('sidebar-open');
        }
    }
    
    // Close sidebar when clicking outside on mobile
    document.addEventListener('click', function(event) {
        const sidebar = document.getElementById('admin-sidebar-wrapper');
        const toggleButton = document.querySelector('.sidebar-toggle');
        
        if (window.innerWidth <= 768 && sidebar && toggleButton) {
            if (!sidebar.contains(event.target) && !toggleButton.contains(event.target)) {
                sidebar.classList.remove('sidebar-open');
            }
        }
    });
    
    // Handle window resize
    window.addEventListener('resize', function() {
        const sidebar = document.getElementById('admin-sidebar-wrapper');
        if (window.innerWidth > 768 && sidebar) {
            sidebar.classList.remove('sidebar-open');
        }
    });
{{/js}}
{{/show_admin_sidebar}}

{{#js}}
// Fix for drawer close button functionality
document.addEventListener('DOMContentLoaded', function() {
    // Wait a bit for the drawer to be fully rendered
    setTimeout(function() {
        // Target the specific block drawer close button
        const blockDrawer = document.getElementById('theme_remui-drawers-blocks');
        if (blockDrawer) {
            console.log('Block drawer found:', blockDrawer);
            
            // Find close button within the drawer
            const closeButton = blockDrawer.querySelector('button[data-action="closedrawer"], .drawer-close, [aria-label*="Close block drawer"]');
            if (closeButton) {
                console.log('Close button found:', closeButton);
                
                // Remove any existing event listeners by cloning the button
                const newCloseButton = closeButton.cloneNode(true);
                closeButton.parentNode.replaceChild(newCloseButton, closeButton);
                
                // Add our custom event listener
                newCloseButton.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    
                    console.log('Close button clicked - closing drawer');
                    
                    // Close the drawer
                    blockDrawer.classList.remove('show');
                    document.body.classList.remove('show-drawer-right');
                    
                    // Update user preference
                    if (typeof M !== 'undefined' && M.util) {
                        M.util.set_user_preference('drawer-open-block', 'false');
                    }
                    
                    // Also try the standard Moodle way
                    if (typeof M !== 'undefined' && M.util && M.util.set_user_preference) {
                        M.util.set_user_preference('drawer-open-block', 'false');
                    }
                    
                    console.log('Drawer closed successfully');
                });
            } else {
                console.warn('Close button not found in block drawer');
            }
            
            // Also handle the drawer toggle button
            const toggleButton = document.querySelector('[data-target="theme_remui-drawers-blocks"]');
            if (toggleButton) {
                console.log('Toggle button found:', toggleButton);
                
                // Remove existing listeners by cloning
                const newToggleButton = toggleButton.cloneNode(true);
                toggleButton.parentNode.replaceChild(newToggleButton, toggleButton);
                
                newToggleButton.addEventListener('click', function(e) {
                    e.preventDefault();
                    e.stopImmediatePropagation();
                    
                    const isOpen = blockDrawer.classList.contains('show');
                    console.log('Toggle button clicked - drawer is:', isOpen ? 'open' : 'closed');
                    
                    if (isOpen) {
                        // Close the drawer
                        blockDrawer.classList.remove('show');
                        document.body.classList.remove('show-drawer-right');
                        
                        if (typeof M !== 'undefined' && M.util) {
                            M.util.set_user_preference('drawer-open-block', 'false');
                        }
                        
                        console.log('Drawer closed via toggle');
                    } else {
                        // Open the drawer
                        blockDrawer.classList.add('show');
                        document.body.classList.add('show-drawer-right');
                        
                        if (typeof M !== 'undefined' && M.util) {
                            M.util.set_user_preference('drawer-open-block', 'true');
                        }
                        
                        console.log('Drawer opened via toggle');
                    }
                });
            }
        } else {
            console.warn('Block drawer not found');
        }
    }, 1000); // Wait 1 second for everything to load
    
    // Additional fallback: Force close drawer with Escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape') {
            const blockDrawer = document.getElementById('theme_remui-drawers-blocks');
            if (blockDrawer && blockDrawer.classList.contains('show')) {
                blockDrawer.classList.remove('show');
                document.body.classList.remove('show-drawer-right');
                
                if (typeof M !== 'undefined' && M.util) {
                    M.util.set_user_preference('drawer-open-block', 'false');
                }
                
                console.log('Drawer closed via Escape key');
            }
        }
    });
    
    // Also try to close drawer when clicking outside
    document.addEventListener('click', function(e) {
        const blockDrawer = document.getElementById('theme_remui-drawers-blocks');
        if (blockDrawer && blockDrawer.classList.contains('show')) {
            // Check if click is outside the drawer
            if (!blockDrawer.contains(e.target) && !e.target.closest('[data-target="theme_remui-drawers-blocks"]')) {
                blockDrawer.classList.remove('show');
                document.body.classList.remove('show-drawer-right');
                
                if (typeof M !== 'undefined' && M.util) {
                    M.util.set_user_preference('drawer-open-block', 'false');
                }
                
                console.log('Drawer closed via outside click');
            }
        }
    });
});
{{/js}}

<style>
/* Force drawer close button to work */
#theme_remui-drawers-blocks button[data-action="closedrawer"],
#theme_remui-drawers-blocks .drawer-close,
#theme_remui-drawers-blocks [aria-label*="Close block drawer"] {
    cursor: pointer !important;
    pointer-events: auto !important;
    z-index: 9999 !important;
}

/* Ensure drawer can be hidden */
#theme_remui-drawers-blocks.hide,
#theme_remui-drawers-blocks:not(.show) {
    transform: translateX(100%) !important;
    visibility: hidden !important;
    opacity: 0 !important;
}

/* Make sure show class works */
#theme_remui-drawers-blocks.show {
    transform: translateX(0) !important;
    visibility: visible !important;
    opacity: 1 !important;
}

/* Force close button styling */
#theme_remui-drawers-blocks button[data-action="closedrawer"] {
    background: #dc3545 !important;
    color: white !important;
    border: none !important;
    padding: 8px 12px !important;
    border-radius: 4px !important;
    font-weight: bold !important;
}

#theme_remui-drawers-blocks button[data-action="closedrawer"]:hover {
    background: #c82333 !important;
}
</style>